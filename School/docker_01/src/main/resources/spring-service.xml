<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">


    <context:component-scan base-package="org.wclg.wut.service"/>
<!--    读取properties文件-->
    <context:property-placeholder location="classpath:/properties/*.properties" ></context:property-placeholder>
<!--    <context:property-override location="classpath:*.properties"/>-->
<!--    创建连接池注入容器-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="url" value="${mysql.url}"></property>
        <property name="username" value="${mysql.username}"></property>
        <property name="password" value="${mysql.password}"></property>
        <property name="driverClassName" value="${mysql.driver}"></property>
    </bean>

    <!-- spring整合mybatis后控制的创建获取SqlSessionFactory的对象 -->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory">
        <!--配置连接池-->
        <property name="dataSource" ref="dataSource"></property>
        <!-- 配置mybatis配置文件路径 -->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
    </bean>

    <!-- mapper扫描配置，扫描到的mapper对象会被注入到Spring容器中 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" id="mapperScannerConfigurer">
        <property name="basePackage" value="org.wclg.wut.dao"></property>
    </bean>

    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
<!--        <property name="maxTotal" value="20" />-->
<!--        <property name="maxIdle" value="10" />-->
<!--        <property name="minIdle" value="4" />-->
<!--        <property name="testOnBorrow" value="true" />-->
<!--        <property name="testOnReturn" value="true" />-->
<!--        <property name="testWhileIdle" value="true" />-->
<!--        <property name="minEvictableIdleTimeMillis" value="60000" />-->
<!--        <property name="timeBetweenEvictionRunsMillis" value="30000" />-->
<!--        <property name="numTestsPerEvictionRun" value="-1" />-->
<!--        <property name="blockWhenExhausted" value="true" />-->
    </bean>
    <bean id="jedisPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg name="poolConfig"  ref="jedisPoolConfig" />
        <constructor-arg name="host" value="${redis.host}" />
        <constructor-arg name="port" value="${redis.port}" />
        <constructor-arg name="timeout" value="${redis.timeout}" />
        <constructor-arg name="password" value="${redis.password}" />
    </bean>
</beans>